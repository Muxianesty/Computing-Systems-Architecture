[Литвинов Михаил Юрьевич, группа БПИ203, вариант по списку: 17]

В проекте используются:
3 интерфейсных модуля
4 модуля реализации

Используемая вычислительная система: ОС Windows 10 x64 со сборкой в компиляторе GNU (MinGW x64)
Использовавшиеся внешние подключаемые модули:
	STL C++:
		<iostream>
		<string>
		<mutex>
		<thread>
		<vector>
	Библиотеки языка C:
		"semaphore.h"
		"chrono"

Основная информация(пункт I):

Задание 5(вариант 17): 
" Задача о Винни-Пухе - 2 или неправильные пчелы. N пчел живет в улье,
каждая пчела может собирать мед и сторожить улей (N>3). Ни одна пчела не
покинет улей, если кроме нее в нем нет других пчел. Каждая пчела приносит
за раз одну порцию меда. Всего в улей может войти тридцать порций меда.
Вини-Пух спит пока меда в улье меньше половины, но как только его
становится достаточно, он просыпается и пытается достать весь мед из улья.
Если в улье находится менее чем три пчелы, Вини-Пух забирает мед, убегает,
съедает мед и снова засыпает. Если в улье пчел больше, они кусают ВиниПуха,
он убегает, лечит укус, и снова бежит за медом. Создать
многопоточное приложение, моделирующее поведение пчел и медведя. "

В качестве модели взаимодействия параллельных потоков рассматривалась модель
"Производители и потребители", где в качестве первых представлены объекты-"Пчелы", а
в качестве вторых - объекты типа "Винни-Пух".

Управление данными программы (вместимость улья в отношении меда, верхнее ограничение
выполняемых операций, количество пчел на старте программы, количество пчел, в рамках которого
Винни-Пух может украсть мед) происходит посредством изменения соответствующих констант - 
к сожалению, я не сумел разобраться, по какой причине любая манипуляция с регистрами памяти
программы до запуска необходимых второстепенных потоков (создание переменных в main.cpp и прочее)
приводит к ошибке сегментации программы, вследствие чего я не сумел и замерить время работы
программы, хотя я бы хотел это сделать.

Из возможных вариантов использования синхропримитивов были рассмотрены следующие:
Mutex для количества меда в улье на данный момент (используется в перегруженном операторе-инкременте
для объекта Hive для контроля изменения количества меда на данный момент)
Mutex для потока вывода информации (используется для контроля ситуаций потенциального искажения
порядка вывода необходимой информации)
Численный семафор для количества пчел вне улья на данный момент (используется для контроля ситуаций, когда 
единственная находящая на данный момент в улье пчела собирается также пойти за медом)
  
