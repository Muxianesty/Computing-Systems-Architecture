[Литвинов Михаил Юрьевич, группа БПИ203, вариант по списку: 97]
В проекте используются:
5 интерфейсных модулей
6 модулей реализации

Основная информация(пункт I):

Задание 1: разработать программу, оформленную в виде консольного приложения, позволяющую считывать несколькими способами входные данные 
об абстрактном представлении конкретных сущностей (далее - "Артефакты и образованные от них альтернативы"), выбор которых диктуется 
выбранным вариантом задания, в виде упорядоченного контейнера с дальнейшим применением к нему конкретного алгоритма обработки данных, 
который также диктуется выбранным вариантом задания.

Особенностью текущего задания(номер 1) является использование языка программирования, поддерживающего архитектуру статической типизации
и реализующего парадигму процедурного программирования. 

Текущая реализация предусматривает считывание входных данных о контейнере альтернатив одним из двух способов:
из указанного файла (посредством передачи пути к нему в качестве одного из параметров программы) или
посредством генерации псевдо-случайных значений. Формат входных данных будет описан далее.

Учитывая текущий вариант задания (97), в качестве основного артефакта используется абстрактный тип данных Plant("Растение"), обладающий
полем имени (без учета вспомогательных полей внутри самой реализации абстрактного типа данных). В качестве базовых альтернатив
рассматриваются сущности Bush("Кустарник", обладающая полем месяца цветения, выраженным с помощью перечислимого типа BlossomMonth), 
Flower("Цветок", обладающая полем типом самого растения, выраженным с помощью перечислимого типа FlowerType) и Tree("Дерево", обладающая
полем возраста дерева, выраженным с помощью типа long long int в силу возможных сходств типов long int и int на некоторых ОС). 
Каждая из альтернатив имеет возможность использования функции подсчета отношения количества гласных в имени к длине самого имени, тем самым
позволяя получать ключ для дальнейшей сортировки элементов. Типом сортировки, определяемым вариантом задания, в данном случае является
Binary Insertion (функция 7 из файла tasks.pdf): реализация сортировки вставкой, в которой поиск позиции для установки нового поступившего
на обработку элемента осуществляется посредством метода двоичного поиска.


Формат входных данных(пункт II):

На вход программе подается четыре аргумента (пять с учетом названия самого файла скомпилированной программы), 
причем первый является ключом, определяющим, будет ли использоваться генерация псевдо-случайных значений для данных о растениях или будет
использоваться ввод из файла. Следующий аргумент определяется на основании предыдущего: если используется генерация псевдо-случайных
значений, то аргументом будет количество растений, которое необходимо сгенерировать, в противном случае аргументом будет путь к файлу,
из которого будет производиться считывание значений. Последними двумя параметрами всегда являются два пути к файлам, в которые будут записываться
данные о растениях в контейнере до и после применения к ним сортировки соответственно. 

Итоговые шаблоны входных данных:
"prog.exe -r quantity output1.txt output2.txt"
"prog.exe -f input1.txt output1.txt output2.txt"
где "-r" и "-f" - флаги, обозначающие генерацию псевдо-случайных значений и считывание из файла соответственно.


Необходимо также учитывать формат ввода данных из файла:

В файле все данные должны иметь один пробел в качестве разделителя. В самом начале файла должно быть написано количество всех считываемых растений
(в случае, если будет считано некорректное значение (отрицательное число или число более 10000, то в качестве размера будет использоваться число 0).
Удобнее всего представлять информацию о каждом растении на отдельной строке: сначала указывается число от 1 до 3 (в противном случае используется
приведение к этому диапазону через деление по модулю 3), указывающее на конкретный тип растения (1 - Куст, 2 - Цветок, 3 - Дерево).
После типа растения всегда должно идти его имя, длина которого не превышает 20 символов (в противном случае нельзя предсказать, какое значение
будет считано далее, но ошибка выполнения программы возникнуть не должна). Последний параметр считывается в зависимости от типа рассматриваемого
растения: для куста указывается номер месяца его цветения (1 - Январь, 2 - Февраль, ..., 12 - Декабрь), для цветка указывается число от 1 до 3 - 
номер его типа (1 - Домашний, 2 - Садовый, 3 - Дикорастущий), для дерева указывается его возраст (однако при псевдо-случайной генерации в целях
безопасности используются значения от 1 до 500), причем во всех вариантах ведется обработка случаев ввода отрицательных чисел и/или значений,
выходящих за пределы допустимого диапазона. 
Пример:
5
1 ae 3
2 test 1
3 aaaaaaaaaa 200
2 abcdefg 3
1 tre 1

подразумевается

Куст ae, цветет в марте
Цветок test, домашний
Дерево aaaaaaaaaa, 200 лет
Цветок abcdefg, дикий
Куст tre, цветет в январе
